#!/bin/bash


clear
export TEST_FOLDER=test
export TEST_SECRET_KEY=$(python3 -c "import uuid; print(uuid.uuid4().hex)")
export TEST_PORT=4041
export TEST_SUPERVISOR=test_api_clubpromoters
export TEST_API_FOLDER=$TEST_FOLDER/clubpromoters-api

export DOMAIN=clubpromoters.net
export TEST_SUBDOMAIN=test.$DOMAIN
export TEST_API_SUBDOMAIN=api.$TEST_SUBDOMAIN;

export TEST_EMAIL_ADDRESS=$TEST_EMAIL_ADDRESS
export TEST_EMAIL_PASSWORD=$TEST_EMAIL_PASSWORD

export TEST_DB=clubpromoters_test
export TEST_DB_USERNAME=$TEST_DB
export TEST_DB_PASSWORD=$(python3 -c "import uuid; print(uuid.uuid4().hex)")

echo "SETTINGS"
echo "========="
echo "folder:"
echo $TEST_FOLDER
echo "secret key:"
echo $TEST_SECRET_KEY
echo "port:"
echo $TEST_PORT
echo "========="
echo ""

echo "DOMAINS"
echo "========="
echo "domain:"
echo $DOMAIN
echo "subdomain:"
echo $TEST_SUBDOMAIN
echo "api subdomain:"
echo $TEST_API_SUBDOMAIN
echo "========="
echo ""

echo "DATABASE"
echo "========="
echo "db:"
echo $TEST_DB
echo "username:"
echo $TEST_DB_USERNAME
echo "password:"
echo $TEST_DB_PASSWORD
echo "========="
echo ""

echo "install test? (y/n)"
read continue
if [[ $continue = "y" ]]
then


echo "Installing SSL certificate===================="
sudo certbot certonly --nginx -d $TEST_SUBDOMAIN -d $TEST_API_SUBDOMAIN
echo "Installing SSL certificate complete==========="


echo "Installing git repository====================="
cd
mkdir $TEST_FOLDER
cd $TEST_FOLDER
git clone https://github.com/AlenAlic/clubpromoters-api
echo "Installing git repository complete============"


echo "Installing venv==============================="
cd && cd $TEST_API_FOLDER
python3 -m venv venv
source venv/bin/activate
pip install pip --upgrade
pip install setuptools --upgrade
pip install -r requirements.txt
pip install gunicorn
deactivate
echo "Installing venv complete======================"


echo "Setting environment variables================="
cd && cd $TEST_API_FOLDER
bash -c 'cat > .env' << EOL
DEBUG=True
SECRET_KEY=$TEST_SECRET_KEY

DATABASE_URI=mysql+pymysql://$TEST_DB_USERNAME:$TEST_DB_PASSWORD@localhost:3306/$TEST_DB?charset=utf8mb4

MAIL_DEFAULT_SENDER=$TEST_EMAIL_ADDRESS

PRETTY_URL=$TEST_SUBDOMAIN
ALLOWED_URLS=["https://$TEST_SUBDOMAIN"]

MAIL_SERVER=$DOMAIN
MAIL_PORT=587
MAIL_USE_TLS=1
MAIL_USERNAME=$TEST_EMAIL_ADDRESS
MAIL_PASSWORD=$TEST_EMAIL_PASSWORD
EOL
echo "Setting environment variables done============"


echo "Create database and user======================"
sudo mysql<<EOF
CREATE DATABASE $TEST_DB CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER '$TEST_DB_USERNAME'@'localhost' IDENTIFIED BY '$TEST_DB_PASSWORD';
GRANT ALL PRIVILEGES ON $TEST_DB_USERNAME.* TO '$TEST_DB_USERNAME'@'localhost';
FLUSH PRIVILEGES;
EOF
echo "Created database and user====================="


echo "Migrating database============================"
cd && cd $TEST_API_FOLDER
source venv/bin/activate
flask db upgrade
deactivate
echo "Database migration complete==================="


echo "Setting up supervisor========================="
sudo -E bash -c 'cat > /etc/supervisor/conf.d/$TEST_SUPERVISOR.conf' << EOL
[program:$TEST_SUPERVISOR]
command=/home/$USER/$TEST_FOLDER/clubpromoters-api/venv/bin/gunicorn -b 127.0.0.1:$TEST_PORT -w 3 run:app
directory=/home/$USER/$TEST_FOLDER/clubpromoters-api
user=$USER
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
EOL
sudo supervisorctl reload
echo "Setting up supervisor complete================"


echo "Setting up nginx=============================="
sudo -E bash -c 'cat > /etc/nginx/conf.d/$TEST_API_SUBDOMAIN.conf' << EOL
server {
    listen 443 ssl http2;
    server_name $TEST_API_SUBDOMAIN;

    location / {
        proxy_pass http://127.0.0.1:$TEST_PORT;
        proxy_redirect off;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }

    access_log /var/log/$TEST_API_SUBDOMAIN.access.log;
    error_log /var/log/$TEST_API_SUBDOMAIN.error.log;

    ssl_certificate /etc/letsencrypt/live/$TEST_SUBDOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$TEST_SUBDOMAIN/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_ecdh_curve secp521r1:secp384r1:prime256v1;

}
server {
    server_name $TEST_API_SUBDOMAIN;
    return 301 https://\$host\$request_uri;
}
EOL
sudo service nginx reload
echo "Setting up nginx complete====================="


echo "Creating update script========================"
cd && cd $TEST_API_FOLDER
bash -c 'cat > scripts/update' << EOL
cd && cd $TEST_API_FOLDER

echo "Creating database backup===="
./cron/weekly
echo "========================Done"

echo "Checking out new version===="
git pull
echo "========================Done"

echo "Installing requirements====="
source venv/bin/activate
pip install -r requirements.txt
echo "========================Done"

echo "Migrating Database=========="
export FLASK_APP=run.py
flask db upgrade
deactivate
echo "========================Done"

echo "Restarting Services========="
sudo supervisorctl restart $TEST_SUPERVISOR
sudo systemctl reload nginx
echo "========================Done"

cd
EOL
echo "Created update script========================="


echo "Creating backup folder========================"
cd && cd $TEST_API_FOLDER
mkdir -p backups/weekly
echo "Created backup folder========================="


echo "Creating cronjob files========================"
cd && cd $TEST_API_FOLDER
mkdir cron
cd cron
bash -c 'cat > weekly' << EOL
#! /bin/bash

cd
mysqldump --login-path=$TEST_FOLDER $TEST_DB | xz -z > "$TEST_API_FOLDER/backups/weekly/backup-\$(date +%Y%m%d-%H%M).db.xz";
EOL
sudo chmod 774 weekly
echo "Created cronjob files========================="


echo "Creating update scripts======================="
cd
echo "alias test-api-update='cd && source $TEST_API_FOLDER/scripts/update'" >> .bashrc
source .bashrc
echo "Created update scripts========================"


cd
else
echo "Skipping test installation."
fi
cd